name: .NET 8 WebAPI CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1) Checkout the repository so we have access to the solution and projects
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) (Optional) Cache NuGet packages to speed up restores and builds
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # 3) Install .NET 8 SDK
      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 4) Restore all dependencies for the solution at the repository root
      - name: Restore dependencies
        run: dotnet restore HealthHUB.API.sln

      # 5) Build the entire solution (no --output here)
      - name: Build solution
        run: dotnet build HealthHUB.API.sln --no-restore --configuration Release

      # 6) Run all unit tests in the solution
      - name: Run tests
        run: dotnet test HealthHUB.API.sln --no-build --verbosity normal

      # 7) Publish the HealthHUB.API project to the ./publish folder
      - name: Publish WebAPI
        run: dotnet publish HealthHUB.API/HealthHUB.API.csproj --configuration Release --output ./publish

      # 8) Upload the published output as a build artifact
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapi-published
          path: ./publish
